
docker network create mysql-master-slave

docker run -d -p 3307:3306 --net=mysql-master-slave --hostname=master --name mysql-master -e MYSQL_ROOT_PASSWORD=123456 -e MYSQL_DATABASE=twitter -e MYSQL_USER=twitter -e MYSQL_PASSWORD=123456 -v ./master-data:/var/lib/mysql mysql/mysql-server:latest --server-id=1 --log-bin='mysql-bin-1.log' --relay_log_info_repository=TABLE --master-info-repository=TABLE --gtid-mode=on --enforce-gtid-consistency

--> CREATE USER 'master_user'@'%' IDENTIFIED WITH mysql_native_password BY '123456';
--> GRANT REPLICATION SLAVE ON *.* TO 'master_user'@'%';



docker run -d -p 3308:3306 --net=mysql-master-slave --hostname=slave1 --name mysql-slave1 -e MYSQL_ROOT_PASSWORD=123456 -e MYSQL_DATABASE=twitter -e MYSQL_USER=twitter -e MYSQL_PASSWORD=123456 -v ./slave1-data:/var/lib/mysql mysql/mysql-server:latest --server-id=2  --relay_log_info_repository=TABLE --master-info-repository=TABLE --gtid-mode=on --enforce-gtid-consistency

CHANGE MASTER TO MASTER_HOST='master', MASTER_USER='master_user', MASTER_PASSWORD='123456', MASTER_AUTO_POSITION = 1 FOR CHANNEL 'master';
START SLAVE;
SHOW SLAVE STATUS\G;


docker run -d -p 3309:3306 --net=mysql-master-slave --hostname=slave2 --name mysql-slave2 -e MYSQL_ROOT_PASSWORD=123456 -e MYSQL_DATABASE=twitter -e MYSQL_USER=twitter -e MYSQL_PASSWORD=123456 -v ./slave2-data:/var/lib/mysql mysql/mysql-server:latest --server-id=3  --relay_log_info_repository=TABLE --master-info-repository=TABLE --gtid-mode=on --enforce-gtid-consistency

CHANGE MASTER TO MASTER_HOST='master', MASTER_USER='master_user', MASTER_PASSWORD='123456', MASTER_AUTO_POSITION = 1 FOR CHANNEL 'master';
START SLAVE;
SHOW SLAVE STATUS\G;



--> CREATE USER 'haproxy_check'@'%';
--> update user set plugin='mysql_native_password' where user='haproxy_check';
--> SELECT user FROM mysql.user;


docker run -d --name haproxy_mysql -v ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg --net=mysql-master-slave -p 8080:8080 -p 3306:3306 haproxy:latest

